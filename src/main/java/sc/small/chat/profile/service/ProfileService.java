package sc.small.chat.profile.service;import java.util.Set;import java.util.stream.Collectors;import lombok.RequiredArgsConstructor;import lombok.extern.slf4j.Slf4j;import org.springframework.stereotype.Service;import org.springframework.transaction.annotation.Transactional;import sc.small.chat.member.dto.SignUpDTO.SignUpProfileRequestDTO;import sc.small.chat.profile.entiy.Career;import sc.small.chat.profile.entiy.Job;import sc.small.chat.profile.entiy.Profile;import sc.small.chat.profile.entiy.ProfileJob;import sc.small.chat.profile.repository.ProfileRepository;@Slf4j@Service@RequiredArgsConstructorpublic class ProfileService {    private final ProfileJobService profileJobService;    private final CareerService careerService;    private final ProfileRepository profileRepository;    @Transactional    public Profile saveForSignUp(SignUpProfileRequestDTO signUpProfileRequestDTO) {        Profile profile = signUpProfileRequestDTO.toEntity();        Set<ProfileJob> profileJobs = signUpProfileRequestDTO.getProfileJobs().stream()            .map(dto -> {                Job job = dto.toEntity();                return ProfileJob.builder()                    .profile(profile)                    .job(job)                    .build();            }).collect(Collectors.toSet());        Set<Career> careers = signUpProfileRequestDTO.getCareers().stream()            .map(careerService::saveForSignUp)            .collect(Collectors.toSet());        profile.setCareers(careers);        profileJobService.saveForSignUp(profileJobs);        return profile;    }}
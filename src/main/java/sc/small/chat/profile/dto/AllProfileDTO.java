package sc.small.chat.profile.dto;import com.querydsl.core.annotations.QueryProjection;import io.swagger.v3.oas.annotations.media.Schema;import java.util.List;import lombok.AllArgsConstructor;import lombok.Builder;import lombok.Data;import lombok.Getter;import lombok.NoArgsConstructor;import lombok.Setter;import sc.small.chat.global.dto.BasicRequestDTO;import sc.small.chat.global.dto.PaginationDTO;@Getter@Setter@Builder@Schema(description = "전체 회원 검색 리스트 DTO", name = "AllProfileDTO")public class AllProfileDTO {    @Getter    @Setter    @Builder    @NoArgsConstructor    @AllArgsConstructor    @Schema(description = "전체 회원 검색 리스트 요청 DTO", name = "AllProfileRequestDTO")    public static class Request extends BasicRequestDTO.PageRequest {        @Schema(description = "닉네임", example = "블라블라")        private String nickname;        @Schema(description = "직무", example = "PM/PO")        private String jobName;        @Schema(description = "경력", example = "전체/주니어/미들/시니어", type = "String")        private String yearsType;    }    @Data    @Schema(description = "전체 회원 검색 리스트 응답 DTO", name = "AllProfileResponseDTO")    public static class Response {        @Schema(description = "닉네임", example = "블라블라")        private String nickname;        @Schema(description = "직무명", example = "PM/PO")        private String jobName;        @Schema(hidden = true)        private boolean isWritten;        @Schema(description = "프로필 이미지", example = "https://smallchat.com/profile/123.jpg")        private String picture;        @Schema(hidden = true)        private int tmpYears;        @Schema(description = "연차", example = "3")        private Integer years;        // TODO 스몰챗 횟수, 응답률 추가        @QueryProjection        public Response(String nickname, String jobName, boolean isWritten, int tmpYears) {            this.nickname = nickname;            this.jobName = jobName;            this.isWritten = isWritten;            this.tmpYears = tmpYears;        }        @Schema(hidden = true)        public void setPicture(String picture) {            this.picture = picture;        }        @Schema(hidden = true)        public void setYearsType(String yearsType) {            if (yearsType != null) {                this.years = tmpYears;            }        }        @Schema(hidden = true)        public void setJobName(boolean isWritten) {            if (isWritten) {                this.jobName = "기타";            }        }    }    public record SwaggerDTO(PaginationDTO pagination, int listCount, List<Response> list) {    }}
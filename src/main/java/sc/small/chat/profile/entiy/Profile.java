package sc.small.chat.profile.entiy;import jakarta.persistence.CascadeType;import jakarta.persistence.Column;import jakarta.persistence.Entity;import jakarta.persistence.GeneratedValue;import jakarta.persistence.GenerationType;import jakarta.persistence.Id;import jakarta.persistence.OneToMany;import jakarta.persistence.Table;import java.util.List;import lombok.Getter;import lombok.NoArgsConstructor;import org.hibernate.annotations.SQLDelete;import org.hibernate.annotations.SQLRestriction;import sc.small.chat.global.entity.BaseEntity;@Entity@Table(name = "profiles")@Getter@NoArgsConstructor@SQLRestriction("deleted_at IS NULL")@SQLDelete(sql = "UPDATE profiles SET deleted_at = NOW() WHERE id = ?")public class Profile extends BaseEntity {    @Id    @GeneratedValue(strategy = GenerationType.IDENTITY)    private Long id;    @Column(name = "nickname")    private String nickname;    @Column(name = "years")    private int years;    @Column(name = "is_open")    private boolean isOpen = true;    @OneToMany(mappedBy = "profile", cascade = CascadeType.ALL, orphanRemoval = true)    private List<ProfileJob> profileJobs;    @OneToMany(mappedBy = "profile", cascade = CascadeType.ALL, orphanRemoval = true)    private List<Career> careers;    public static Profile createProfile(String nickname, int years) {        Profile profile = new Profile();        profile.nickname = nickname;        profile.years = years;        return profile;    }}
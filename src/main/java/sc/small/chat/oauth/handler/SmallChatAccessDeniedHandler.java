package sc.small.chat.oauth.handler;import com.fasterxml.jackson.databind.ObjectMapper;import jakarta.servlet.http.HttpServletRequest;import jakarta.servlet.http.HttpServletResponse;import java.io.IOException;import java.nio.charset.Charset;import java.nio.charset.StandardCharsets;import lombok.extern.slf4j.Slf4j;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import org.springframework.http.HttpStatus;import org.springframework.http.MediaType;import org.springframework.security.access.AccessDeniedException;import org.springframework.security.web.access.AccessDeniedHandler;import sc.small.chat.global.dto.BasicResponseDTO;@Slf4jpublic class SmallChatAccessDeniedHandler implements AccessDeniedHandler {    @Override    public void handle(HttpServletRequest request, HttpServletResponse response, AccessDeniedException accessDeniedException) throws IOException {        accessDeniedException.printStackTrace();        log.info(String.format("인증 실패 - %s", accessDeniedException.getMessage()));        response.setStatus(403);        // 공통 응답처리 사용        BasicResponseDTO<?> responseDTO = BasicResponseDTO.error(            HttpStatus.FORBIDDEN, String.format("해당 경로 접근 권한이 없습니다.[%s]", accessDeniedException.getMessage())        );        // json mapper        ObjectMapper mapper = new ObjectMapper();        // 한글 깨짐 방지 charset        response.setContentType(MediaType.APPLICATION_JSON_VALUE + ";charset=" + StandardCharsets.UTF_8);        response.getWriter().write(mapper.writeValueAsString(responseDTO));    }}
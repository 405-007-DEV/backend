package sc.small.chat.global.security.oauth.controller;import io.swagger.v3.oas.annotations.Operation;import io.swagger.v3.oas.annotations.media.Content;import io.swagger.v3.oas.annotations.media.Schema;import io.swagger.v3.oas.annotations.responses.ApiResponse;import io.swagger.v3.oas.annotations.responses.ApiResponses;import io.swagger.v3.oas.annotations.tags.Tag;import org.springframework.web.bind.annotation.GetMapping;import org.springframework.web.bind.annotation.PostMapping;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RestController;@Tag(name = "OAuth2 Controller", description = "OAuth2 로그인 엔드포인트, Swagger 문서화를 위해 엔드포인트만 정의")@RestController@RequestMapping("/oauth2")public class OAuth2Controller {    @Operation(summary = "Google OAuth2 로그인", description = "Google OAuth2 로그인을 위한 엔드포인트")    @RequestMapping("/authorization/google?redirect_uri=http://localhost:3000/oauth/redirect")    public void googleLogin() {        // 실제 구현은 필요 없음, Swagger 문서화를 위해 엔드포인트만 정의    }    @Operation(summary = "redirect 를 위한 임시 URI", description = "OAuth2 로그인 후 redirect 를 위한 임시 URI")    @RequestMapping("/success")    public String loginSuccess() {        return "구글 로그인 성공!!";    }    @Operation(summary = "로그아웃", description = "로그아웃 수행 후, 기본 페이지로 redirect")    @RequestMapping("/logout")    public void logout() {        // 실제 로그아웃 처리는 SecurityConfiguration 에서 처리됨    }}
# 공통 설정파일 - 필요 설정은 하위 환경 설정파일에서 오버라이딩

spring:
  application:
    name: chat

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ENC(gkzJV5HUytLIBkRclZlitVPI4+kGmpXHfqjb5gYFUGS+ERvwmgNRgL2VnRF9sPVk9cDLM599axKdJIFhEnjOMYBH1zUwfe5kuKpo5+6JYnJoUBo2pxom3A==)
            client-secret: ENC(FUMnuBKFHX6iaRZGZrYOzf6WHkTnPGVGV839zDbNhhyfIn5J27gtTtMiVSxgyNQpBnqCoSSw5Kk=)
            redirect-uri: '{baseUrl}/login/oauth2/code/{registrationId}'
            scope: profile, email

  datasource:
    # DB 로깅용 연결정보 - 성능저하 방지를 위해 logback.xml 설정 필수 - parameter 확인
#    driver-class-name: net.sf.log4jdbc.sql.jdbcapi.DriverSpy
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://127.0.0.1:3306/db
    username: root
    password: 1234
    hikari:
      max-lifetime: 177000 # 177초, hikari는 RDS wait_timeout(180초) 보다 2 ~ 3초 정도 짧게 줄 것을 권장

  jpa:
#    database-platform: org.hibernate.dialect.MySQL57Dialect
    open-in-view: false # persistence는 트랜젝션으로 제한
#    generate-ddl: false # 스키마 관리는 rails 에서
    show-sql: true # log4jdbc 랑 겹치면 false로 변경

    properties:
      jakarta:
        persistence:
          sharedCache:
            mode: ALL
      hibernate:
        format_sql: false
        default_batch_fetch_size: 100 # batch 처리(update, insert)시 N + 1 해결

    hibernate:
      ddl-auto: update

  data:
    redis:
      host: localhost
      repositories:
        enabled: false

springdoc:
  api-docs:
    enabled: true
    path: /api-docs
  swagger-ui:
    enabled: true
    path: /swagger
    operations-sorter: alpha
    tags-sorter: alpha
    disable-swagger-default-url: true
    display-request-duration: true
    filter: true
  default-consumes-media-type: application/json
  default-produces-media-type: application/json
  show-actuator: true

server:
  servlet:
    context-path: /api/v1


jwt:
  secret-key-base: ENC(vZ9d0WvdGFFU7iC/NyQTlX3Q2K3fqr1l2RUZL+uUBRNZS0wLFk3X7XmoSmwTuKMB3Z2LEXyeUGTX8K3xZxvQNRFdDOSF/xVLrTb4kXj/NUD4gXAFLFtrtByC95JH5jtDq5bXViEDITSjYJfL/kv6gA==)

app:
  oauth2:
    authorized-redirect-uris: http://localhost:3000/home